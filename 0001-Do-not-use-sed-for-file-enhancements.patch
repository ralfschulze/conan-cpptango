From 9f98e105dfdaba608e7c4e62baa5bfe6e98fc618 Mon Sep 17 00:00:00 2001
From: Marius Elvert <marius.elvert@softwareschneiderei.de>
Date: Tue, 10 Dec 2019 14:53:30 +0100
Subject: [PATCH] Do not use sed for file enhancements

---
 cppapi/server/idl/CMakeLists.txt | 46 +++++++++++++++++++++++---------
 1 file changed, 34 insertions(+), 12 deletions(-)

diff --git a/cppapi/server/idl/CMakeLists.txt b/cppapi/server/idl/CMakeLists.txt
index cece00f1..9943c087 100644
--- a/cppapi/server/idl/CMakeLists.txt
+++ b/cppapi/server/idl/CMakeLists.txt
@@ -28,23 +28,45 @@ if(${FAILED})
     message(SEND_ERROR " Failed to generate source files from idl. rv=${FAILED}")
 endif()
 
-FILE(GLOB ENHANCEMENTS Enhance*)
-
 MESSAGE( STATUS "CMAKE_CURRENT_BINARY_DIR: " ${CMAKE_CURRENT_BINARY_DIR} )
 MESSAGE( STATUS "CMAKE_CURRENT_SOURCE_DIR: " ${CMAKE_CURRENT_SOURCE_DIR} )
 MESSAGE( STATUS "CMAKE_INCLUDE_PATH: " ${CMAKE_INCLUDE_PATH} )
 
-foreach(ENHANCEMENT ${ENHANCEMENTS})
-    message("Applying enhancement ${ENHANCEMENT}")
-    execute_process(COMMAND sed -i -f ${ENHANCEMENT} tango.h
-                WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
-                RESULT_VARIABLE FAILED)
+function(replace_in_file FILENAME SEARCH NEW_CONTENT)
+    file(READ "${CMAKE_CURRENT_SOURCE_DIR}/${FILENAME}" ORIGINAL_DATA)
+    string(REPLACE "${SEARCH}" "${NEW_CONTENT}" REPLACED_DATA "${ORIGINAL_DATA}")
+    file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/${FILENAME}" "${REPLACED_DATA}")
+endfunction()
 
-        #non-zero
-    if(${FAILED})
-        message(SEND_ERROR " Failed to apply ${ENHANCEMENT}. rv=${FAILED}")
-    endif()
-endforeach(ENHANCEMENT)
+function(add_after_in_file FILENAME SEARCH CONTENT)
+    replace_in_file(${FILENAME} "${SEARCH}" "${SEARCH} ${CONTENT}")
+endfunction()
+
+add_after_in_file(tango.h "typedef _CORBA_ConstrType_Variable_Var<AttributeValue_4> _var_type;" "\n\n\
+    //Added by Tango team\n\
+    virtual ~AttributeValue_4() {if (mut_ptr != NULL)mut_ptr->unlock();}\n\
+    AttributeValue_4() {mut_ptr=NULL;}\n\
+    void set_attr_mutex(omni_mutex *ptr) {mut_ptr=ptr;}\n\
+    void rel_attr_mutex() {if (mut_ptr != NULL){mut_ptr->unlock();mut_ptr=NULL;}}\n\
+    omni_mutex *get_attr_mutex() {return mut_ptr;}\n\
+    omni_mutex *mut_ptr;\n")
+
+add_after_in_file(tango.h "typedef _CORBA_ConstrType_Variable_Var<AttributeValue_5> _var_type;" "\n\n\
+    //Added by Tango team\n\
+    virtual ~AttributeValue_5() {if (mut_ptr != NULL)mut_ptr->unlock();}\
+    AttributeValue_5() {mut_ptr=NULL;}\
+    void set_attr_mutex(omni_mutex *ptr) {mut_ptr=ptr;}\
+    void rel_attr_mutex() {if (mut_ptr != NULL){mut_ptr->unlock();mut_ptr=NULL;}}\
+    omni_mutex *get_attr_mutex() {return mut_ptr;}\
+    omni_mutex *mut_ptr;")
+
+add_after_in_file(tango.h "typedef\ _CORBA_ConstrType_Variable_Var<DevPipeData> _var_type;" "\n\n\
+    //Added by Tango team\n\
+    virtual ~DevPipeData() {if (mut_ptr != NULL)mut_ptr->unlock();}\
+    DevPipeData() {mut_ptr=NULL;}\
+    void set_pipe_mutex(omni_mutex *ptr) {mut_ptr=ptr;}\
+    void rel_pipe_mutex() {if (mut_ptr != NULL){mut_ptr->unlock();mut_ptr=NULL;}}\
+    omni_mutex *mut_ptr;")
 
 set(SOURCES tangoSK.cpp
             tangoDynSK.cpp)
-- 
2.18.0.windows.1

